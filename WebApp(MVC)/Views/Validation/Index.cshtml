@{
    ViewData["Title"] = "SyncValidate";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #3c6382;
            --secondary-color: #0a3d62;
            --accent-color: #60a3bc;
            --success-color: #44bd32;
            --info-color: #0097e6;
            --warning-color: #e1b12c;
            --danger-color: #c23616;
            --light-color: #f5f6fa;
            --dark-color: #2f3640;
            --border-radius: 10px;
            --box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: #f8f9fa;
            color: #333;
            transition: var(--transition);
        }

        .container {
            max-width: 1400px;
        }

        .card {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            transition: var(--transition);
            overflow: hidden;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
            }

        .card-header {
            border-bottom: none;
            padding: 1.25rem 1.5rem;
            font-weight: 600;
            background: linear-gradient(135deg, var(--accent-color), var(--info-color));
            color: white;
        }

        .code-editor {
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            line-height: 1.5;
            border-radius: var(--border-radius);
            border: 2px solid #dee2e6;
            padding: 15px;
            transition: var(--transition);
            resize: vertical;
            min-height: 300px;
        }

            .code-editor:focus {
                border-color: var(--accent-color);
                box-shadow: 0 0 0 0.25rem rgba(96, 163, 188, 0.25);
                outline: none;
            }

        .theme-switch {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            display: flex;
            align-items: center;
            background-color: white;
            padding: 8px 12px;
            border-radius: 25px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .form-check-input {
            margin-right: 8px;
            cursor: pointer;
        }

        .form-check-label {
            cursor: pointer;
            margin-bottom: 0;
        }

        .dark-mode {
            background-color: var(--dark-color);
            color: #f1f1f1;
        }

            .dark-mode .card {
                background-color: #3d3d3d;
                border-color: #555;
            }

            .dark-mode .code-editor {
                background-color: #2d2d2d;
                color: #f1f1f1;
                border-color: #555;
            }

            .dark-mode .alert-info,
            .dark-mode .alert-success,
            .dark-mode .alert-danger {
                background-color: #3d3d3d;
                color: #f1f1f1;
                border-color: #555;
            }

        .loading-spinner {
            display: none;
            margin: 20px auto;
        }

        .file-drop-zone {
            border: 2px dashed #dee2e6;
            border-radius: var(--border-radius);
            padding: 30px;
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
            background-color: rgba(240, 240, 240, 0.5);
        }

            .file-drop-zone:hover {
                border-color: var(--accent-color);
                background-color: rgba(96, 163, 188, 0.1);
            }

            .file-drop-zone i {
                font-size: 3rem;
                color: var(--accent-color);
                margin-bottom: 10px;
            }

        .validation-badge {
            position: absolute;
            top: -10px;
            right: -10px;
            padding: 10px;
            border-radius: 50%;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            z-index: 10;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
        }

        .btn {
            border-radius: 8px;
            padding: 8px 16px;
            font-weight: 500;
            transition: var(--transition);
        }

        .btn-lg {
            padding: 12px 24px;
            font-weight: 600;
        }

        .btn-success {
            background-color: var(--success-color);
            border-color: var(--success-color);
        }

            .btn-success:hover {
                background-color: #3ea12a;
                border-color: #3ea12a;
                transform: translateY(-2px);
            }

        .btn-light {
            background-color: rgba(255, 255, 255, 0.9);
            color: var(--dark-color);
        }

            .btn-light:hover {
                background-color: #fff;
                transform: translateY(-2px);
            }

        .btn-outline-primary {
            color: var(--accent-color);
            border-color: var(--accent-color);
        }

            .btn-outline-primary:hover {
                background-color: var(--accent-color);
                color: white;
                transform: translateY(-2px);
            }

        .btn i {
            margin-right: 6px;
        }

        .alert {
            border-radius: var(--border-radius);
            border: none;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        }

        pre {
            border-radius: var(--border-radius);
            border: 1px solid rgba(0, 0, 0, 0.1);
            max-height: 400px;
        }

        .badge {
            padding: 7px 12px;
            border-radius: 50px;
            font-weight: 500;
            margin: 0 5px;
        }

        .display-4 {
            font-weight: 700;
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-fill-color: transparent;
        }

        .lead {
            color: #666;
            font-size: 1.3rem;
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            color: #555;
            margin-bottom: 0.5rem;
        }

        .alert, .card, .btn, .badge, .file-drop-zone {
            animation: fadeIn 0.5s ease-in-out;
        }

        .smaller-text {
            font-size: 19px;
        }
    </style>
</head>
<body>
    <div class="container py-5">
        <!-- Header Section -->
        <div class="text-center mb-5">
            <h1 class="display-4 fw-bold mb-3">SyncValidate</h1>
            <h6 class="display-4 fw-bold mb-3 smaller-text">Unified validation generator</h6>
            <p class="lead">Validate your React JSX code with real-time syntax highlighting and generate C# models</p>
            <div class="d-flex justify-content-center gap-3 mb-2">
                <span class="badge bg-primary">React</span>
                <span class="badge bg-secondary">JSX</span>
                <span class="badge bg-success">Validation</span>
                <span class="badge bg-info">C# Models</span>
            </div>
        </div>
        <!-- Main Content -->
        <div class="row g-4">
            <!-- Input Section -->
            <div class="col-lg-6">
                <div class="card shadow-lg h-100 position-relative">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="bi bi-code-square me-2"></i>Code Input
                        </h4>
                        <button class="btn btn-sm btn-light" id="clearBtn">
                            <i class="bi bi-trash"></i> Clear
                        </button>
                    </div>
                    <div class="card-body">
                        <form id="validationForm" enctype="multipart/form-data">
                            <div class="form-group mb-4">
                                <label for="jsxCode" class="form-label">
                                    <i class="bi bi-code me-1"></i>JSX Code:
                                </label>
                                <textarea id="jsxCode" class="form-control code-editor" rows="12" placeholder="Enter your JSX code here..." spellcheck="false"></textarea>
                            </div>
                            <div class="file-drop-zone mb-4" id="dropZone">
                                <i class="bi bi-cloud-upload"></i>
                                <p class="mb-2 fw-bold">Drag & drop your React file here</p>
                                <small class="text-muted d-block mb-2">or</small>
                                <input type="file" id="reactFormFile" class="d-none" accept=".jsx,.js,.tsx,.ts" />
                                <button type="button" class="btn btn-outline-primary" id="browseBtn">
                                    <i class="bi bi-folder"></i> Browse Files
                                </button>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-success btn-lg">
                                    <i class="bi bi-check-circle"></i> Validate Code
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <!-- Results Section -->
            <div class="col-lg-6">
                <div class="card shadow-lg h-100 position-relative">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="bi bi-ui-checks me-2"></i>Validation Results
                        </h4>
                        <div class="action-buttons">
                            <button class="btn btn-sm btn-light" id="copyBtn">
                                <i class="bi bi-clipboard"></i> Copy
                            </button>
                            <button class="btn btn-sm btn-light" id="generateModelBtn" disabled>
                                <i class="bi bi-code-slash"></i> Generate C# Model
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Loading Spinner -->
                        <div class="loading-spinner text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3 fw-medium">Validating your code...</p>
                        </div>
                        <!-- Loading Spinner for Model Generation -->
                        <div class="loading-spinner-model text-center d-none">
                            <div class="spinner-border text-success" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3 fw-medium">Generating C# Model...</p>
                        </div>
                        <!-- Results Content -->
                        <div id="validationResult" class="alert alert-info d-none">
                            <h5 class="d-flex align-items-center gap-2 mb-3">
                                <i class="bi bi-info-circle text-info"></i> Validation Rules:
                            </h5>
                            <pre id="jsonOutput" class="bg-light p-3 rounded mb-0 overflow-auto"></pre>
                        </div>
                        <div id="modelResult" class="alert alert-success d-none">
                            <h5 class="d-flex align-items-center gap-2 mb-3">
                                <i class="bi bi-code-slash text-success"></i> Generated C# Model:
                                <button class="btn btn-sm btn-outline-success" id="copyModelBtn">
                                    <i class="bi bi-clipboard"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-success" id="downloadModelBtn">
                                    <i class="bi bi-download"></i>
                                </button>
                            </h5>
                            <pre id="modelOutput" class="bg-light p-3 rounded mb-0 overflow-auto"></pre>
                        </div>
                        <div id="errorResult" class="alert alert-danger d-none">
                            <h5 class="d-flex align-items-center gap-2 mb-3">
                                <i class="bi bi-exclamation-triangle text-danger"></i> Error:
                            </h5>
                            <p id="errorMessage" class="mb-0"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-jsx.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-csharp.min.js"></script>

    <script>
        $(document).ready(function () {
            let validationData = null;


            // File drag and drop handling
            const dropZone = $('#dropZone');
            dropZone.on('dragover', function (e) {
                e.preventDefault();
                $(this).addClass('border-primary bg-light');
            });
            dropZone.on('dragleave', function (e) {
                e.preventDefault();
                $(this).removeClass('border-primary bg-light');
            });
            dropZone.on('drop', function (e) {
                e.preventDefault();
                $(this).removeClass('border-primary bg-light');
                const file = e.originalEvent.dataTransfer.files[0];
                if (file) {
                    handleFile(file);
                }
            });

            // Browse button handling
            $('#browseBtn').click(function () {
                $('#reactFormFile').click();
            });
            $('#reactFormFile').change(function (e) {
                const file = e.target.files[0];
                if (file) {
                    handleFile(file);
                }
            });

            function handleFile(file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    $('#jsxCode').val(e.target.result);
                };
                reader.readAsText(file);
            }

            // Clear button handling
            $('#clearBtn').click(function () {
                $('#jsxCode').val('');
                $('#reactFormFile').val('');
                $('#validationResult, #errorResult, #modelResult').addClass('d-none');
                $('#generateModelBtn').prop('disabled', true);
                validationData = null;
            });

            // Copy validation JSON button handling
            $('#copyBtn').click(function () {
                const jsonOutput = $('#jsonOutput').text();
                navigator.clipboard.writeText(jsonOutput).then(function () {
                    const originalText = $('#copyBtn').html();
                    $('#copyBtn').html('<i class="bi bi-check"></i> Copied!');
                    setTimeout(function () {
                        $('#copyBtn').html(originalText);
                    }, 2000);
                });
            });

            // Copy model button handling
            $('#copyModelBtn').click(function () {
                const modelOutput = $('#modelOutput').text();
                navigator.clipboard.writeText(modelOutput).then(function () {
                    const originalText = $('#copyModelBtn').html();
                    $('#copyModelBtn').html('<i class="bi bi-check"></i>');
                    setTimeout(function () {
                        $('#copyModelBtn').html(originalText);
                    }, 2000);
                });
            });

            // Download model button handling
            $('#downloadModelBtn').click(function () {
                const modelCode = $('#modelOutput').text();
                const blob = new Blob([modelCode], { type: 'text/plain' });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                a.download = 'ValidationModel.cs';
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
                document.body.removeChild(a);
            });

            // Generate model button handling
            $('#generateModelBtn').click(function () {
                if (!validationData) {
                    $('#errorResult').removeClass('d-none').addClass('d-block');
                    $('#errorMessage').text('No validation data available. Please validate your code first.');
                    return;
                }
                $('#modelResult').addClass('d-none');
                $('.loading-spinner-model').removeClass('d-none');
                $.ajax({
                    url: '/api/validation/convert-to-model',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(validationData),
                    xhrFields: { responseType: 'blob' },
                    success: function (blob) {
                        $('.loading-spinner-model').addClass('d-none');
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            const modelCode = e.target.result;
                            $('#modelResult').removeClass('d-none').addClass('d-block');
                            $('#modelOutput').text(modelCode);
                            Prism.highlightElement(document.getElementById('modelOutput'));
                        };
                        reader.readAsText(blob);
                    },
                    error: function (xhr, status, error) {
                        $('.loading-spinner-model').addClass('d-none');
                        $('#errorResult').removeClass('d-none').addClass('d-block');
                        try {
                            const reader = new FileReader();
                            reader.onload = function (e) {
                                $('#errorMessage').text(e.target.result);
                            };
                            reader.readAsText(xhr.response);
                        } catch (e) {
                            $('#errorMessage').text('Error generating C# model: ' + (xhr.responseText || error));
                        }
                    }
                });
            });

            // Form submission for validation
            $('#validationForm').submit(function (event) {
                event.preventDefault();
                const jsxCode = $('#jsxCode').val();
                const reactFormFile = $('#reactFormFile')[0].files[0];
                if (!jsxCode && !reactFormFile) {
                    $('#errorResult').removeClass('d-none').addClass('d-block');
                    $('#errorMessage').text('Please enter JSX code or upload a file.');
                    return;
                }
                $('#validationResult, #errorResult, #modelResult').addClass('d-none');
                $('.loading-spinner').show();
                $('#generateModelBtn').prop('disabled', true);
                let formData = new FormData();
                if (jsxCode) {
                    formData.append('JsxCode', jsxCode);
                }
                if (reactFormFile) {
                    formData.append('ReactFormFile', reactFormFile);
                }
                $.ajax({
                    url: '/api/validation/validate',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        $('.loading-spinner').hide();
                        $('#validationResult').removeClass('d-none').addClass('d-block');
                        validationData = response;
                        const formattedJson = JSON.stringify(JSON.parse(response), null, 2);
                        $('#jsonOutput').text(formattedJson);
                        $('#generateModelBtn').prop('disabled', false);
                        const badge = $('<div class="validation-badge bg-success"><i class="bi bi-check-circle text-white"></i></div>');
                        $('.card:last').append(badge);
                        setTimeout(() => badge.fadeOut('slow', function () { $(this).remove(); }), 3000);
                    },
                    error: function (xhr, status, error) {
                        $('.loading-spinner').hide();
                        $('#errorResult').removeClass('d-none').addClass('d-block');
                        $('#errorMessage').text(xhr.responseText);
                        validationData = null;
                        const badge = $('<div class="validation-badge bg-danger"><i class="bi bi-x-circle text-white"></i></div>');
                        $('.card:last').append(badge);
                        setTimeout(() => badge.fadeOut('slow', function () { $(this).remove(); }), 3000);
                    }
                });
            });
        });
    </script>
</body>
</html>
